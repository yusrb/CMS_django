from django.shortcuts import render, redirect
from admin_argon.forms import RegistrationForm, LoginForm, UserPasswordResetForm, UserSetPasswordForm, UserPasswordChangeForm
from django.contrib.auth.views import LoginView, PasswordResetView, PasswordResetConfirmView, PasswordChangeView
from django.contrib.auth import logout
from django.contrib.auth.decorators import login_required
from admin_cms.models import Konfigurasi

# Create your views here.

@login_required
def index(request):
    konfigurasi_home = Konfigurasi.objects.filter(user_id=1).first()
    if request.user.level == 'Admin':
        return redirect('http://127.0.0.1:8000/admin/user_cms/konten/')
    else:
        return redirect('http://127.0.0.1:8000/admin/user_cms/konten/')

@login_required
def billing(request):
    konfigurasi_home = Konfigurasi.objects.filter(user_id=1).first()
    return render(request, 'pages/billing.html', {'konfigurasi_home': konfigurasi_home})

@login_required
def profile(request):
    konfigurasi_home = Konfigurasi.objects.filter(user_id=1).first()
    return render(request, 'pages/profile.html', {'konfigurasi_home': konfigurasi_home})

@login_required
def tables(request):
    konfigurasi_home = Konfigurasi.objects.filter(user_id=1).first()
    return render(request, 'pages/tables.html', {'konfigurasi_home': konfigurasi_home})

@login_required
def rtl(request):
    konfigurasi_home = Konfigurasi.objects.filter(user_id=1).first()
    return render(request, 'pages/rtl.html', {'konfigurasi_home': konfigurasi_home})

@login_required
def vr(request):
    konfigurasi_home = Konfigurasi.objects.filter(user_id=1).first()
    return render(request, 'pages/virtual-reality.html', {'konfigurasi_home': konfigurasi_home})

def register(request):
    konfigurasi_home = Konfigurasi.objects.filter(user_id=1).first()
    if request.method == 'POST':
        form = RegistrationForm(request.POST)
        if form.is_valid():
            form.save()
            print("Account created successfully!")
            return redirect('/accounts/login/')
        else:
            print("Registration failed!")
    else:
        form = RegistrationForm()

    context = {'form': form, 'konfigurasi_home': konfigurasi_home}
    return render(request, 'accounts/sign-up.html', context)


class UserLoginView(LoginView):
    template_name = 'accounts/sign-in.html'
    form_class = LoginForm

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context['konfigurasi_home'] = Konfigurasi.objects.filter(user_id=1).first()
        return context


class UserPasswordResetView(PasswordResetView):
    template_name = 'accounts/password_reset.html'
    form_class = UserPasswordResetForm

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context['konfigurasi_home'] = Konfigurasi.objects.filter(user_id=1).first()
        return context


class UserPasswordResetConfirmView(PasswordResetConfirmView):
    template_name = 'accounts/password_reset_confirm.html'
    form_class = UserSetPasswordForm

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context['konfigurasi_home'] = Konfigurasi.objects.filter(user_id=1).first()
        return context


class UserPasswordChangeView(PasswordChangeView):
    template_name = 'accounts/password_change.html'
    form_class = UserPasswordChangeForm

    def get_context_data(self, **kwargs):
        context = super().get_context_data(**kwargs)
        context['konfigurasi_home'] = Konfigurasi.objects.filter(user_id=1).first()
        return context


def user_logout_view(request):
    konfigurasi_home = Konfigurasi.objects.filter(user_id=1).first()
    logout(request)
    return redirect('/accounts/login/')
